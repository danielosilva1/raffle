// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaign {
  id                String            @id @default(uuid()) @map("campaign_pk")
  title             String
  status            String // active, closed, cancelled 
  description       String
  targetSupporters  Int               @map("target_supporters")
  organizerUserId   String            @map("organizer_user_pk")
  organizerName     String            @map("organizer_name")
  startDate         DateTime          @map("start_date")
  endDate           DateTime?         @map("end_date")
  drawnNumber       Int?              @map("drawn_number")
  createdBy         String            @map("created_by")
  createdAt         DateTime          @default(now())
  campaign_supports CampaignSupport[]

  @@map("campaign")
}

model CampaignSupport {
  id              String   @id @default(uuid()) @map("campaign_support_pk")
  order           Int
  supporterUserId String   @map("supporter_user_pk")
  supporterName   String   @map("supporter_name")
  message         String?
  supportedAt     DateTime @default(now()) @map("supported_at")
  campaignId      String   @map("campaign_pk")
  campaign        Campaign @relation(fields: [campaignId], references: [id])

  @@map("campaign_support")
}
